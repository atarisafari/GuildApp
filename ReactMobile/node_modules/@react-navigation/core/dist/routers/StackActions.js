function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var POP = 'Navigation/POP';
var POP_TO_TOP = 'Navigation/POP_TO_TOP';
var PUSH = 'Navigation/PUSH';
var RESET = 'Navigation/RESET';
var REPLACE = 'Navigation/REPLACE';
var COMPLETE_TRANSITION = 'Navigation/COMPLETE_TRANSITION';

var pop = payload => _objectSpread({
  type: POP
}, payload);

var popToTop = payload => _objectSpread({
  type: POP_TO_TOP
}, payload);

var push = payload => _objectSpread({
  type: PUSH
}, payload);

var reset = payload => _objectSpread({
  type: RESET,
  key: null
}, payload);

var replace = payload => _objectSpread({
  type: REPLACE
}, payload);

var completeTransition = payload => _objectSpread({
  type: COMPLETE_TRANSITION
}, payload);

export default {
  POP,
  POP_TO_TOP,
  PUSH,
  RESET,
  REPLACE,
  COMPLETE_TRANSITION,
  pop,
  popToTop,
  push,
  reset,
  replace,
  completeTransition
};
//# sourceMappingURL=StackActions.js.map