{"version":3,"sources":["../../src/views/withNavigationFocus.js"],"names":["React","hoistStatics","withNavigation","withNavigationFocus","Component","ComponentWithNavigationFocus","constructor","props","state","isFocused","navigation","componentDidMount","subscriptions","addListener","setState","componentWillUnmount","forEach","sub","remove","render","onRef","displayName","name","forwardRef"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,SAASC,mBAAT,CAA6BC,SAA7B,EAAwC;AACrD,QAAMC,4BAAN,SAA2CL,KAAK,CAACI,SAAjD,CAA2D;AAIzDE,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AAEA,WAAKC,KAAL,GAAa;AACXC,QAAAA,SAAS,EAAEF,KAAK,CAACG,UAAN,GAAmBH,KAAK,CAACG,UAAN,CAAiBD,SAAjB,EAAnB,GAAkD;AADlD,OAAb;AAGD;;AAEDE,IAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAED,QAAAA;AAAF,UAAiB,KAAKH,KAA5B;AACA,WAAKK,aAAL,GAAqB,CACnBF,UAAU,CAACG,WAAX,CAAuB,UAAvB,EAAmC,MACjC,KAAKC,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAE;AAAb,OAAd,CADF,CADmB,EAInBC,UAAU,CAACG,WAAX,CAAuB,UAAvB,EAAmC,MACjC,KAAKC,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAE;AAAb,OAAd,CADF,CAJmB,CAArB;AAQD;;AAEDM,IAAAA,oBAAoB,GAAG;AACrB,WAAKH,aAAL,CAAmBI,OAAnB,CAA2BC,GAAG,IAAIA,GAAG,CAACC,MAAJ,EAAlC;AACD;;AAEDC,IAAAA,MAAM,GAAG;AACP,aACE,oBAAC,SAAD,eACM,KAAKZ,KADX;AAEE,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,SAFxB;AAGE,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWa;AAHlB,SADF;AAOD;;AApCwD;;AADN,kBAC/Cf,4BAD+C,iBAE7B,uBAAsBD,SAAS,CAACiB,WAAV,IAC1CjB,SAAS,CAACkB,IAAK,GAHkC;;AAwCrD,SAAOrB,YAAY,CACjBC,cAAc,CAACG,4BAAD,EAA+B;AAAEkB,IAAAA,UAAU,EAAE;AAAd,GAA/B,CADG,EAEjBnB,SAFiB,CAAnB;AAID","sourcesContent":["import React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport withNavigation from './withNavigation';\n\nexport default function withNavigationFocus(Component) {\n  class ComponentWithNavigationFocus extends React.Component {\n    static displayName = `withNavigationFocus(${Component.displayName ||\n      Component.name})`;\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        isFocused: props.navigation ? props.navigation.isFocused() : false,\n      };\n    }\n\n    componentDidMount() {\n      const { navigation } = this.props;\n      this.subscriptions = [\n        navigation.addListener('didFocus', () =>\n          this.setState({ isFocused: true })\n        ),\n        navigation.addListener('willBlur', () =>\n          this.setState({ isFocused: false })\n        ),\n      ];\n    }\n\n    componentWillUnmount() {\n      this.subscriptions.forEach(sub => sub.remove());\n    }\n\n    render() {\n      return (\n        <Component\n          {...this.props}\n          isFocused={this.state.isFocused}\n          ref={this.props.onRef}\n        />\n      );\n    }\n  }\n\n  return hoistStatics(\n    withNavigation(ComponentWithNavigationFocus, { forwardRef: false }),\n    Component\n  );\n}\n"],"file":"withNavigationFocus.js"}