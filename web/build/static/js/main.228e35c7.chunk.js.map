{"version":3,"sources":["pages/profilePicPlaceholder.png","imgs/0_GuildSword_Icon.png","components/header/profilePicPlaceholder.png","imgs/3_Staff_Icon.png","utils/apiCalls.js","components/buttons/homeButton.js","App.js","pages/signUp.js","styles/friend_style.js","components/Friend.js","components/Comment.js","styles/post_profile_styles.js","components/Post.js","styles/add_post_style.js","components/AddPost.js","styles/header_style.js","components/header/header_form.js","components/header/SmallProfileAvatar.js","components/header/Header_component.js","pages/home.js","pages/profile.js","serviceWorker.js","index.js","pages/router.js","imgs/4_Shield_Icon.png","imgs/1_Sword_Icon.png","imgs/2_BowArrow_Icon.png","imgs/Guild_Logo.png"],"names":["module","exports","__webpack_require__","p","signUp","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","password","display_name","profile_pic_url","response","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","sent","abrupt","text","then","console","log","parse","t0","stop","_x","_x2","apply","this","login","_ref2","_callee2","_context2","_x3","_x4","addPost","_ref3","_callee3","token","content","image_url","_args3","_context3","_x5","_x6","addComment","_ref4","_callee4","post_id","_context4","mode","_x7","_x8","_x9","grabAllFriends","_ref5","_callee5","_context5","_x10","grabAllPosts","_ref6","_callee6","_context6","_x11","_x12","grabAllComments","_ref7","_callee7","_context7","_x13","_x14","addFriend","_ref8","_callee8","_context8","_x15","_x16","deletePost","_ref9","_callee9","_context9","_x17","_x18","blockUser","_ref10","_callee10","_context10","_x19","_x20","deleteComment","_ref12","_callee12","comment_id","_context12","_x22","_x23","HomeButton","props","react_default","createElement","className","onClick","history","push","path","children","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loggedIn","_this2","_this$state","loginHandler","data","error","localStorage","setItem","alert","id","src","logo","width","height","placeholder","value","onChange","e","setState","objectSpread","target","type","homeButton","assign","Component","pages_signUp","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","setPassword","_useState5","_useState6","confPassword","setConfPassword","_useState7","_useState8","setDisplay_name","_useState9","_useState10","tileData","img","GuildSword","title","Sword","BowArrow","Staff","Shield","signUpHandler","reactjs_popup_es","trigger","IconButton_default","Badge_default","badgeContent","Add_default","color","Grid_default","container","justify","alignItems","alt","require","style","position","modal","cancel","GridList_default","cellHeight","GridListTile_default","key","cols","ListSubheader_default","component","Button","close","map","tile","href","maxWidth","GridListTileBar_default","onBlur","styles","theme","friend_card","margin","friend_block_button","backgroundColor","padding","marginTop","textAlign","border","float","friend_img","cursor","borderRadius","friend_title","fontSize","friend_subtitle","friend_post","withStyles","getItem","classes","goProfile","blockUserHandler","result","window","confirm","ble","location","reload","Card","CardBody","Math","floor","random","random_img","CardTitle","tag","name","CardSubtitle","CardText","preview","Comment","deleteHandler","time_created","_comment_input","post","marginLeft","post_card","marginRight","marginBottom","post_card_body","post_card_title","post_text","comment_button","comment_input","fade","palette","common","white","&:hover","shape","defineProperty","breakpoints","up","spacing","unit","commentAdd","setCommentAdd","comments","setComments","num_likes","likes","setLikes","liked","setLiked","user","commentsHandler","grabLikes","likeHandler","addCommentHandler","useEffect","post_div","elevation","post_card_text","Favorite_default","toggle","isShown","setIsShown","Fragment","show","Comment_default","hide","components_Comment","coment_input__button_wrap","TextField_default","fullWidth","multiline","variant","size","add_post","add_post_button","add_post_input","add_post_popup","minHeight","add_post_title","post_popup_camera","post_button","post_cancel_button","thumbsContainer","display","flexDirection","flexWrap","thumb","boxSizing","thumbInner","minWidth","overflow","setContent","files","setFiles","_useDropzone","useDropzone","accept","onDrop","acceptedFiles","file","URL","createObjectURL","getRootProps","getInputProps","imageUpload","forEach","revokeObjectURL","addPostHandler","InputProps","endAdornment","InputAdornment_default","CameraAlt_default","_React$createElement","autoComplete","rows","class","_search","mainBar","formButtonWrap","searchButtonWrap","addButtonWrap","searchButton","borderBottomLeftRadius","borderTopLeftRadius","addButton","searchForm","inputWrap","searchInput","grow","flexGrow","logoButton","backgroundImage","concat","Logo","backgroundRepeat","backgroundSize","backgroundPosition","search","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","profileButton","profileAvatar","sectionDesktop","sectionMobile","desktopMenu","mobileMenu","notificationsModal","popMenuIcons","notificationsModalText","textAllign","SearchFriendForm","searchFriend","addFriendHandler","handleSubmit","bind","assertThisInitialized","event","preventDefault","form","FormData","elements","onSubmit","InputBase_default","root","input","Button_default","Search_default","React","ProfileAvatar","profileImageLink","headerstyles","Header_component","anchorEl","mobileMoreAnchorEl","notificationsModalAnchorEl","handleProfileMenuOpen","currentTarget","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","handleNotificationsModalOpen","handleNotifcationsModalClose","handleLogout","clear","goHome","isMenuOpen","Boolean","isMobileMenuOpen","isNotificationsModalOpen","notifications_amount","notifications_markup","notification","index","MenuItem_default","SmallProfileAvatar","message","renderNotificationsModal","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","renderMenu","AccountCircle_default","Settings_default","Close_default","renderMobileMenu","Notifications_default","Toolbar_default","header_form","aria-owns","aria-haspopup","MoreVert_default","defaultProps","home","friends","setFriends","posts","setPosts","friendsHandler","postsHandler","logout","header_Header_component","values","components_Friend","components_AddPost","components_Post","num_comments","profile","hostname","match","ReactDOM","render","react_router_dom","react_router","exact","SignUP","Home","Profile","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.228e35c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilePicPlaceholder.1d88924d.png\";","module.exports = __webpack_public_path__ + \"static/media/0_GuildSword_Icon.ad1f5489.png\";","module.exports = __webpack_public_path__ + \"static/media/profilePicPlaceholder.1d88924d.png\";","module.exports = __webpack_public_path__ + \"static/media/3_Staff_Icon.b3bde274.png\";","//const fetch = require('node-fetch');\r\nexport const signUp = async (username,password,display_name='',profile_pic_url='') => { \r\n    try{\r\n        let response = await fetch('https://guild-app.com/php/signup.php', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n                display_name: display_name,\r\n                profile_pic_url: profile_pic_url,\r\n            })\r\n        })\r\n        return response.text().then(function(text) {\r\n            console.log(\"SignUp response\",text);\r\n            return text ? JSON.parse(text) : {}\r\n        })\r\n        //return data;        \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    } \r\n}\r\n\r\nexport const login = async (username,password) => { \r\n    try{\r\n        let response = await fetch('https://guild-app.com/php/login.php', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n        })\r\n        })\r\n        return response.text().then(function(text) {\r\n            console.log(\"login response\",text);\r\n            return text ? JSON.parse(text) : {}\r\n        })       \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    } \r\n}\r\n\r\nexport const addPost = async (token,content,image_url='') => { \r\n    try{\r\n        let response = await fetch('https://guild-app.com/php/addPost.php', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: token,\r\n                content: content,\r\n                image_url: image_url,\r\n            })\r\n        })\r\n        return response.text().then(function(text) {\r\n            console.log(\"addPost response\",text);\r\n            return text ? JSON.parse(text) : {}\r\n        })       \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    } \r\n}\r\n\r\nexport const addComment = async (token, post_id, content) => { \r\n    try{\r\n        let response = await fetch('https://guild-app.com/php/addComment.php', {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: token,\r\n                post_id: post_id,\r\n                content: content\r\n            })\r\n        })\r\n        return await response.text().then(function(text) {\r\n            console.log(\"addComment response\",text);\r\n            return text ? JSON.parse(text) : {}\r\n        })   \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    } \r\n}\r\n\r\nexport const grabAllFriends = async (token) => { \r\n    try{\r\n        let response = await fetch('https://guild-app.com/php/grabAllFriends.php', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: token\r\n            })\r\n        })\r\n        return await response.text().then(function(text) {\r\n            console.log(\"grabAllFriends response\",text);\r\n            return text ? JSON.parse(text) : {}\r\n        })   \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    } \r\n}\r\n\r\nexport const grabAllPosts = async (token, username) => { //empty username means our own username\r\n    try{\r\n        let response = await fetch('https://guild-app.com/php/grabAllPosts.php', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: token,\r\n                username: username\r\n            })\r\n        })\r\n        return await response.text().then(function(text) {\r\n            console.log(\"grabAllPosts response from \", username + text);\r\n            return text ? JSON.parse(text) : {}\r\n        })   \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    } \r\n}\r\n\r\nexport const grabAllComments = async (token, post_id) => { //empty username means our own username\r\n    try{\r\n        let response = await fetch('https://guild-app.com/php/grabAllComments.php', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: token,\r\n                post_id: post_id\r\n            })\r\n        })\r\n        return await response.text().then(function(text) {\r\n            console.log(\"grabAllComments response\", text);\r\n            return text ? JSON.parse(text) : {}\r\n        })   \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    } \r\n}\r\n\r\nexport const addFriend = async (token, username ) => { \r\n    try{\r\n        let response = await fetch('https://guild-app.com/php/addFriend.php', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: token,\r\n                username: username \r\n            })\r\n        })\r\n        return await response.text().then(function(text) {\r\n            console.log(\"addFriend response\",text);\r\n            return text ? JSON.parse(text) : {}\r\n        })   \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    } \r\n}\r\n\r\nexport const deletePost = async (token, post_id) => { \r\n    try{\r\n        let response = await fetch('https://guild-app.com/php/deletePost.php', {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: token,\r\n                post_id: post_id\r\n            })\r\n        })\r\n        return await response.text().then(function(text) {\r\n            console.log(\"deletePost response\",text);\r\n            return text ? JSON.parse(text) : {}\r\n        })   \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    } \r\n}\r\n\r\nexport const blockUser = async (token, username ) => { \r\n    try{\r\n        let response = await fetch('https://guild-app.com/php/blockUser.php', {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: token,\r\n                username : username \r\n            })\r\n        })\r\n        return await response.text().then(function(text) {\r\n            console.log(\"blockUser response\",text);\r\n            return text ? JSON.parse(text) : {}\r\n        })   \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    } \r\n}\r\n\r\nexport const searchFriends = async (token) => { \r\n    try{\r\n        let response = await fetch('https://guild-app.com/php/searchFriends.php', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: token\r\n            })\r\n        })\r\n        return await response.text().then(function(text) {\r\n            console.log(\"searchFriends response\",text);\r\n            return text ? JSON.parse(text) : {}\r\n        })   \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    } \r\n}\r\n\r\nexport const deleteComment = async (token, comment_id) => { \r\n    try{\r\n        let response = await fetch('https://guild-app.com/php/deleteComment.php', {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: token,\r\n                comment_id: comment_id\r\n            })\r\n        })\r\n        return await response.text().then(function(text) {\r\n            console.log(\"deleteComment response\",text);\r\n            return text ? JSON.parse(text) : {}\r\n        })   \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    } \r\n}","import React, { Component } from 'react';\r\n\r\nconst HomeButton = (props)=> {\r\n    return(\r\n        <button className={props.className} onClick={()=>props.history.push(props.path)}>{props.children}</button>\r\n    );\r\n}\r\nexport default HomeButton;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {login} from './utils/apiCalls';\r\nimport HomeButton from './components/buttons/homeButton';\r\nimport logo from './imgs/Guild_Logo.png';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: 'False',\r\n      username: '',\r\n      password:'',\r\n    }\r\n  }\r\n  render() {\r\n    const {username,password} = this.state;\r\n\r\n    const loginHandler = async() =>{\r\n        let data = await login(username,password);\r\n        console.log(\"Result\" , data);\r\n        if(data.error === \"\"){\r\n            console.log(\"Login was successful\");\r\n            localStorage.setItem('token', data.token);\r\n            localStorage.setItem('username', this.state.username);\r\n            localStorage.setItem('usernameFriend', '');\r\n            this.props.history.push(\"/home\");\r\n        }\r\n        else{\r\n            alert(data.error);\r\n        }      \r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header id=\"sign_in_header\" className=\"App-header\">\r\n          <div className=\"container-left\">\r\n          <p></p>\r\n          <img src={logo} width='80%' height='auto'/>\r\n          </div>\r\n          <div className=\"container-right\">\r\n            <div id=\"logo_header\">\r\n                <p className='guild'>Guild</p>\r\n            </div>\r\n            <div id=\"login\">\r\n              <div id=\"username_login\">\r\n                Username:\r\n                <input className='username' placeholder=\"Username\" value={username} onChange= { e => this.setState({...this.state, username: e.target.value})}/>\r\n              </div>\r\n              <div id=\"password_login\">\r\n                Password: \r\n                <input className='password' placeholder=\"Password\" type='password' value={password} onChange= { e => this.setState({...this.state, password: e.target.value})}/>\r\n              </div>\r\n              <button className='login' onClick={()=>loginHandler()}> LOGIN </button>\r\n              <HomeButton className='signUp' path='/signUp' {...this.props}>SIGN UP</HomeButton>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","\r\nimport React, { useContext, useState } from 'react';\r\nimport '../styles/signUp.css';\r\nimport {signUp} from '../utils/apiCalls';\r\nimport HomeButton from '../components/buttons/homeButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Card, CardBody, CardTitle, Button } from 'reactstrap';\r\nimport Popup from \"reactjs-popup\";\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport GuildSword from '../imgs/0_GuildSword_Icon.png';\r\nimport Sword from '../imgs/1_Sword_Icon.png';\r\nimport BowArrow from '../imgs/2_BowArrow_Icon.png';\r\nimport Staff from '../imgs/3_Staff_Icon.png';\r\nimport Shield from '../imgs/4_Shield_Icon.png';\r\n\r\nexport default props => {\r\n    // const {message} = useContext(FBContext); \r\n    console.log('props: ', props); \r\n    const [username,setUsername] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [confPassword,setConfPassword] = useState('');\r\n    const [display_name,setDisplay_name] = useState('');\r\n    const [profile_pic_url,setProfile_pic_url] = useState('');\r\n    \r\n    const tileData = [\r\n        {\r\n            img: GuildSword,\r\n            title: 'Guild Sword',\r\n        },\r\n        {\r\n            img: Sword,\r\n            title: 'Sword',\r\n        },\r\n        {\r\n            img: BowArrow,\r\n            title: 'Bow Arrow',\r\n        },\r\n        {\r\n            img: Staff,\r\n            title: 'Staff',\r\n        },\r\n        {\r\n            img: Shield,\r\n            title: 'Shield',\r\n        }\r\n    ];\r\n\r\n    const usernameHandler = username=>{\r\n        setUsername(username);\r\n    }\r\n    const passwordHandler = password=>{\r\n        setPassword(password);\r\n    }\r\n    const confPasswordHandler = confPassword=>{\r\n        setConfPassword(confPassword);\r\n    }\r\n    const display_nameHandler = display_name=>{\r\n        setDisplay_name(display_name);\r\n    }\r\n    const profile_pic_urlHandler = profile_pic_url=>{\r\n        setProfile_pic_url(profile_pic_url);\r\n        console.log('src', profile_pic_url);\r\n    }\r\n    const signUpHandler = async() =>{\r\n        if(password !== confPassword){ //If passwords don't match then dont make the api call\r\n            alert(\"Your passwords don't match, please try again.\");\r\n        }\r\n        else{\r\n            let data = await signUp(username,password,display_name,profile_pic_url);\r\n            console.log(\"Result\" , data);\r\n            if(data.error === \"\"){\r\n                //TODO\r\n                console.log(\"Sign up was successful\");\r\n                props.history.push(\"/\");\r\n            }\r\n            else{\r\n                alert(data.error);\r\n            }\r\n        }\r\n        \r\n    }\r\n//    const charSelectHandler = event=>{\r\n//        const charId = event.target.value;\r\n//        setSelectCharacter(charId);\r\n//    }\r\n    //console.log(username,password);\r\n    return (\r\n    <div className=\"AppSignUp\">\r\n        <div id=\"signUp\">\r\n            <h1> SignUp </h1> \r\n            {/* <SamplePage2 />  */}\r\n            <div id=\"profile_pic\">\r\n                <Popup trigger={\r\n                    <IconButton>\r\n                        <Badge badgeContent={<AddIcon />} color=\"secondary\" >\r\n                            <Grid container justify=\"center\" alignItems=\"center\">\r\n                                <img alt=\"\" src={require('./profilePicPlaceholder.png')} style={{  height: '130px', width : '140px' }} />\r\n                            </Grid>\r\n                        </Badge>\r\n                    </IconButton>\r\n                    } position=\"bottom center\" modal > \r\n                    {cancel => (\r\n                        <div id=\"cancel\">\r\n                            <GridList cellHeight={150}>\r\n                                <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n                                    <ListSubheader component=\"div\">Choose Profile Picture <Button id=\"closeButtonn\" close onClick={cancel}/> </ListSubheader>\r\n                                </GridListTile>\r\n                                {tileData.map(tile => (\r\n                                    <a href='#' onClick={cancel}>\r\n                                        <GridListTile key={tile.img} style={{ maxWidth: '100%', height: 'auto' }} cols={tile.cols || 1}>\r\n                                        {/*<a href=\"#\" onClick= {profile_pic_urlHandler(tile.img)}>*/}\r\n                                            <img src={tile.img} alt={tile.title} />\r\n                                            <GridListTileBar title={tile.title}/>\r\n                                        </GridListTile>\r\n                                    </a>\r\n                                    \r\n\r\n                                ))}\r\n\r\n                            </GridList>\r\n                        </div>\r\n                        \r\n                    )}\r\n                </Popup>\r\n            </div>\r\n            <div id=\"display_name_signUp\">\r\n                Display Name: \r\n                <input onBlur= { e => display_nameHandler(e.target.value)}/>\r\n            </div>\r\n            <div id=\"username_signUp\">\r\n                Username:\r\n                <input onBlur= { e => usernameHandler(e.target.value)}/>\r\n            </div>\r\n            <div id=\"password_signUp\">\r\n                Password: \r\n                <input type='password' onBlur= { e => passwordHandler(e.target.value)}/>\r\n            </div>\r\n            <div id=\"confirm_password_signUp\">\r\n                Retype Password: \r\n                <input type='password' onBlur= { e => confPasswordHandler(e.target.value)}/>\r\n            </div>\r\n            <button className=\"signUp\" onClick={()=>signUpHandler()}> SIGN UP </button>\r\n            <HomeButton className='signUp' path='/' {...props}>BACK</HomeButton>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import { Radio } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n\r\n    friend_card:{\r\n        width: '18rem',\r\n        margin:'20px',\r\n    },\r\n\r\n    friend_block_button:{\r\n        height:'34.4px',\r\n        width:'60px',\r\n        color: \"white\",\r\n        backgroundColor:\"#cc0000\",\r\n        margin:'5px',\r\n        padding:'5px',\r\n        marginTop:'0',\r\n        textAlign:'center',\r\n        border:'0px',\r\n        float: 'right',\r\n        /* border:'1px solid green'*/\r\n    },\r\n\r\n\r\n    friend_img:{\r\n        cursor: 'pointer',\r\n        width: '40px',\r\n        height: '40px',\r\n        margin: '5px',\r\n        borderRadius: '5px'\r\n    },\r\n\r\n    friend_title:{\r\n        fontSize:'25px',\r\n    },\r\n\r\n    friend_subtitle:{\r\n        fontSize:'16px',\r\n    },\r\n\r\n    friend_post:{\r\n        fontSize:'14px',\r\n    }\r\n});\r\n\r\nexport default styles","import React, { Component } from 'react';\r\nimport {blockUser} from '../utils/apiCalls';\r\nimport { Card, CardImg, CardText, CardBody,CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport GuildSword from '../imgs/0_GuildSword_Icon.png';\r\nimport Sword from '../imgs/1_Sword_Icon.png';\r\nimport BowArrow from '../imgs/2_BowArrow_Icon.png';\r\nimport Staff from '../imgs/3_Staff_Icon.png';\r\nimport Shield from '../imgs/4_Shield_Icon.png';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport styles from '../styles/friend_style';\r\n\r\nconst Friend = (props) => {\r\n    const token = localStorage.getItem('token');\r\n    const img = [GuildSword, Sword, BowArrow, Staff, Shield];\r\n    const {classes} = props;\r\n\r\n    const goProfile = async() =>{\r\n        //change username?\r\n        localStorage.setItem('usernameFriend', props.username);\r\n        props.history.push(\"/profile\");\r\n    }\r\n\r\n    const blockUserHandler = async() => {\r\n        if (window.confirm('Are you sure you wish to block '+props.username+' ?')){\r\n            let result =  await blockUser(token, props.id).then(ble => ble) \r\n            console.log('Delete post response: ', result);\r\n            alert(props.username + \" has been blocked\");\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    const random_img = img =>{\r\n        return img[Math.floor(Math.random()*img.length)];\r\n    }\r\n\r\n    return (\r\n        <div key={props.id} id={props.id}>\r\n            <Card className={classes.friend_card}>\r\n                <CardBody>                   \r\n                    <Button className={classes.friend_block_button} onClick={blockUserHandler}>Block</Button>\r\n                    <img className={classes.friend_img} alt=\"/static/images/avatar/2.jpg\" src={random_img(img)}  onClick={()=>goProfile()}/> \r\n                    <CardTitle className={classes.friend_title} tag=\"h2\"> \r\n                        {props.name}\r\n                    </CardTitle>\r\n                    <CardSubtitle className={classes.friend_subtitle} tag=\"h5\">{props.username}</CardSubtitle>\r\n                    <CardText className={classes.friend_post} tag=\"p\">{props.preview}</CardText>\r\n                </CardBody>             \r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Friend);\r\n","import React, { Component } from 'react';\r\nimport {deleteComment} from '../utils/apiCalls';\r\nimport GuildSword from '../imgs/0_GuildSword_Icon.png';\r\nimport Sword from '../imgs/1_Sword_Icon.png';\r\nimport BowArrow from '../imgs/2_BowArrow_Icon.png';\r\nimport Staff from '../imgs/3_Staff_Icon.png';\r\nimport Shield from '../imgs/4_Shield_Icon.png';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\nconst Comment = (props) => {\r\n    const token = localStorage.getItem('token');\r\n    const img = [GuildSword, Sword, BowArrow, Staff, Shield];\r\n\r\n    const random_img = img =>{\r\n        return img[Math.floor(Math.random()*img.length)];\r\n    }\r\n\r\n    const deleteHandler = async() => {\r\n        if (window.confirm('Are you sure you wish to delete this comment?')){\r\n            console.log(\"Delete confirmed\");\r\n            let result =  await deleteComment(token, props.id).then(ble => ble) \r\n            console.log('Delete comment response: ', result);\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div key={props.id} id={props.id} className=\"media mb-3\">\r\n                <img\r\n                    className=\"m-2 rounded\"\r\n                    width=\"48\"\r\n                    height=\"48\"\r\n                    src= {random_img(img)}\r\n                    alt= '/static/images/avatar/2.jpg'\r\n                />\r\n\r\n                <div className=\"media-body p-2 shadow-sm rounded bg-light border\">\r\n                    <Button close onClick={deleteHandler}/>\r\n                    <small className=\"m-1 float-right text-muted\">{props.time_created}</small>\r\n                    <h6 className=\"mt-0 mb-1 text-muted\">{props.username + \" says:\"}</h6>\r\n                    {props.content}\r\n                </div>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default (Comment);\r\n","import { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst styles = theme => ({\r\n    post:{\r\n        /*border: '1px solid green' ,*/\r\n        marginLeft:'100px',\r\n    },\r\n\r\n    post_card:{\r\n        /* border: '1px solid yellow' ,*/\r\n        marginLeft:'17%',\r\n        marginRight:'17%',\r\n        width:'66%',\r\n        maxWidth: '900px',\r\n        marginBottom:'50px',\r\n    },\r\n    post_card_body:{\r\n        /*border: '1px solid black' ,*/\r\n    },\r\n    post_card_title:{\r\n        /* border: '1px solid red' ,*/\r\n        fontSize:'30px',\r\n    },\r\n    post_text:{\r\n        /*border: '1px solid blue' ,*/\r\n        fontSize:'16px',\r\n    },\r\n    comment_button:{\r\n        color: \"white\",\r\n        backgroundColor:\"#b20949\",\r\n        height:'38px',\r\n        borderRadius:'4px',\r\n        textAlign:'center',\r\n        marginRight: '5px',\r\n        marginLeft: '5px',\r\n        marginBottom:'9px',\r\n        border: '0px',\r\n    },\r\n    comment_input:{\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),},\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: '5px',\r\n        marginLeft: '5px',\r\n        width: '60%',\r\n        maxHeight:'200px',\r\n        minHeight:'38px',\r\n        resize:'vertical',\r\n        [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing.unit * 3,\r\n        width: '60%',\r\n        },\r\n        marginBottom:'9px',\r\n}\r\n\r\n});\r\n\r\n\r\nexport default styles","import React, { Component, useState, useEffect} from 'react';\r\nimport {deletePost, addComment, grabAllComments} from '../utils/apiCalls';\r\nimport Comment from './Comment';\r\nimport LikeButton from '@material-ui/icons/FavoriteBorder';\r\nimport CommentButton from '@material-ui/icons/Comment';\r\nimport styles from '../styles/post_profile_styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport GuildSword from '../imgs/0_GuildSword_Icon.png';\r\nimport Sword from '../imgs/1_Sword_Icon.png';\r\nimport BowArrow from '../imgs/2_BowArrow_Icon.png';\r\nimport Staff from '../imgs/3_Staff_Icon.png';\r\nimport Shield from '../imgs/4_Shield_Icon.png';\r\nimport { Card, CardImg, CardText, CardBody,CardTitle, CardSubtitle, Button } from 'reactstrap';\r\n\r\n\r\nconst Post = (props) => {\r\n    const token = localStorage.getItem('token');\r\n    const img = [GuildSword, Sword, BowArrow, Staff, Shield];\r\n    const [commentAdd,setCommentAdd] = useState('');\r\n    const [comments,setComments] = useState([]);\r\n    const [likes,setLikes] = useState(props.num_likes); //useState(Math.floor(Math.random()*5)+1);\r\n    const [liked,setLiked] = useState(false);\r\n    const {classes} = props;\r\n    let user = \r\n        props.username===''\r\n            ? localStorage.getItem('username') \r\n            : localStorage.getItem('usernameFriend');\r\n\r\n    const commentsHandler = async() => {\r\n        console.log(\"calling comments \" + props.id);\r\n        let result =  await grabAllComments(token, props.id).then(ble => ble) \r\n        console.log('fetching posts', result);\r\n        if(result!== null){\r\n            setComments(result);\r\n        }\r\n    }\r\n    \r\n    const grabLikes = async() => {\r\n        \r\n    }\r\n\r\n    const likeHandler = async() => {\r\n        liked ? setLiked(false) : setLiked(true)\r\n        liked ? setLikes(likes-1) : setLikes(likes+1)\r\n    }\r\n\r\n    const commentAddHandler = content =>{\r\n        setCommentAdd(content);//TODO\r\n        console.log(content);\r\n    }\r\n\r\n    const addCommentHandler = async() =>{\r\n        if(commentAdd === ''){ //If passwords don't match then dont make the api call\r\n            alert(\"Can't add an empty comment\");\r\n        }\r\n        else{\r\n            let result = await addComment(token, props.id, commentAdd);\r\n            console.log(\"addComment Result\" , result);\r\n            if(result.error === \"\"){\r\n                console.log(\"Comment added\");\r\n                window.location.reload();\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteHandler = async() => {\r\n        if (window.confirm('Are you sure you wish to delete this post?')){\r\n            console.log(\"Delete confirmed\");\r\n            let result =  await deletePost(token, props.id).then(ble => ble) \r\n            console.log('Delete post response: ', result);\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    const ToggleContent = ({ toggle, content }) => {\r\n        const [isShown, setIsShown] = useState(false);\r\n        const hide = () => setIsShown(false);\r\n        const show = () => setIsShown(true);\r\n        \r\n        return (\r\n        <React.Fragment>\r\n            {toggle(show)}\r\n            {isShown && content(hide)}\r\n        </React.Fragment>\r\n        );\r\n    };\r\n    \r\n    useEffect(()=>{//This will be executed always after the components have been rendered\r\n        commentsHandler();\r\n        grabLikes();\r\n    },[]);\r\n\r\n    return (\r\n        <div className={classes.post_div} id={props.id} >\r\n            <Card className={classes.post_card} elevation={4} >\r\n                <CardBody className={classes.post_card_body}>\r\n                    <CardTitle className={classes.post_card_title} tag=\"h1\"> \r\n                        {user}\r\n                        <Button close onClick={deleteHandler}/>\r\n                    </CardTitle>\r\n                    <CardText className={classes.post_card_text} tag=\"p\">\r\n                        {props.content}\r\n                    </CardText>\r\n                    <small className=\"float-right text-muted\">{props.time_created}</small>\r\n                    <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={likes} onClick={likeHandler} color=\"secondary\">\r\n                            <FavoriteIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n            \r\n                    <ToggleContent\r\n                        toggle={show => <IconButton onClick={show}><CommentButton/></IconButton>}\r\n                        content={hide => (\r\n                            <div>\r\n                                {\r\n                                    comments.map((value) => {\r\n                                            return (\r\n                                                <Comment    key={value.comment_id} \r\n                                                            id={value.comment_id} \r\n                                                            image_url={value.profile_pic_url}\r\n                                                            name={value.display_name}\r\n                                                            time_created={value.time_created}\r\n                                                            username={value.username}  \r\n                                                            content={value.content}\r\n                                                />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    <div className={classes.coment_input__button_wrap}>\r\n                        <TextField \r\n                            className={classes.comment_input}\r\n                            id=\"textPopUp\" \r\n                            fullWidth \r\n                            multiline\r\n                            placeholder=\"Make a comment...\" \r\n                            onBlur= { e => commentAddHandler(e.target.value)}\r\n                        /> \r\n                        <Button className={classes.comment_button} variant=\"primary\" size=\"small\" onClick={addCommentHandler}>\r\n                            Comment\r\n                        </Button>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Post);","import { CenterFocusStrong } from \"material-ui-icons\";\r\n\r\nconst styles = theme => ({\r\n    add_post:{\r\n        width:'80%',\r\n        marginLeft:'10%',\r\n        marginRight:'10%',\r\n        marginTop:' 20px',\r\n        marginBottom:' 20px',\r\n        border:' 0px',\r\n        /*border:' 1px solid black',*/\r\n        borderRadius:' 20px',\r\n    },\r\n    \r\n    add_post_button:{    \r\n        backgroundColor:' white',\r\n        border:' 0px',\r\n        /*border:' 1px solid blue',*/\r\n        borderRadius:' 20px',\r\n    },\r\n    \r\n    add_post_input:{\r\n        width:'95%',\r\n        backgroundColor:' white',\r\n        border:' 0px',\r\n        borderRadius:' 40px',\r\n    },\r\n    \r\n    add_post_popup:{\r\n        width:'600px',\r\n        minHeight:' 300px',\r\n        borderRadius:' 40px', \r\n    },\r\n\r\n    add_post_title:{\r\n        textAlign:'center',\r\n        fontSize:'20px',\r\n    },\r\n\r\n    post_popup_camera:{\r\n        cursor: 'pointer',\r\n        margin:'10px',\r\n        width:'30px',\r\n        height:'30px',\r\n    },\r\n\r\n    post_button:{\r\n        height:'34.4px',\r\n        width:'60px',\r\n        color: \"white\",\r\n        backgroundColor:\"#b20949\",\r\n        margin:'5px',\r\n        padding:'5px',\r\n        marginTop:'0',\r\n        textAlign:'center',\r\n        border:'0px '\r\n        /* border:'1px solid green'*/\r\n    },\r\n\r\n    post_cancel_button:{\r\n        height:'34.4px',\r\n        width:'60px',\r\n        color: \"white\",\r\n        backgroundColor:\"grey\",\r\n        margin:'5px',\r\n        padding:'1px',\r\n        marginTop:'0',\r\n        textAlign:'center',\r\n        border:'0px '\r\n        /* border:'1px solid ytellow' */\r\n    },\r\n });\r\n\r\nexport default styles","\r\nimport React, { Component, useState , useEffect } from 'react';\r\nimport {addPost} from '../utils/apiCalls';\r\nimport { Card, CardBody, CardTitle, Button } from 'reactstrap';\r\nimport Popup from \"reactjs-popup\";\r\nimport Camera from '@material-ui/icons/CameraAlt';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport styles from '../styles/add_post_style';\r\n\r\n\r\nconst AddPost = (props) => {\r\n    //console.log('AddPost props: ', props); \r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('username');\r\n    const [content,setContent] = useState('');\r\n    const [files, setFiles] = useState([]);\r\n    const {classes} = props;\r\n\r\n    const {getRootProps, getInputProps} = useDropzone({\r\n        accept: 'image/*',\r\n        onDrop: acceptedFiles => {\r\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n        })));\r\n        }\r\n    });\r\n\r\n    const imageUpload = files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n                <div style={thumbInner}>\r\n                    <img src={file.preview} style={img}/>\r\n                </div>\r\n                <Button close size=\"sm\" position='absolute'/>\r\n        </div>\r\n    ));\r\n    \r\n    useEffect(() => () => {\r\n    // Make sure to revoke the data uris to avoid memory leaks\r\n    files.forEach(file => URL.revokeObjectURL(file.preview));\r\n    }, [files]);\r\n\r\n    const contentHandler = content=>{\r\n        setContent(content);\r\n        console.log(content);\r\n    }\r\n\r\n    const addPostHandler = async() =>{\r\n        if(content === ''){\r\n            alert(\"Can't add an empty post\");\r\n        }else{\r\n            let data = await addPost(token, content, '');\r\n            console.log(\"Result\" , data);\r\n            if(data.error === \"\"){\r\n                console.log(\"Add post was successful\");\r\n            }\r\n            else{\r\n                alert(data.error);\r\n            }\r\n        }\r\n        window.location.reload();\r\n    }\r\n    \r\n    return (\r\n        <div id={props.id}>\r\n            <Card  className={classes.add_post}>\r\n                <Popup  className={classes.add_post_popup} trigger={\r\n                    <button  className={classes.add_post_button}>\r\n                        <TextField \r\n                            className={classes.add_post_input}\r\n                            id=\"textPopUp\" \r\n                            fullWidth \r\n                            placeholder=\"Add a post...\" \r\n                            InputProps={{\r\n                                endAdornment: <InputAdornment position=\"end\"> <Camera /></InputAdornment>,\r\n                            }}\r\n                        /> \r\n                    </button>\r\n                    } position=\"bottom center\" modal > \r\n                    {cancel => (\r\n                        <div id=\"cancel\">\r\n                            <CardTitle className={classes.add_post_title} tag=\"h1\"> {user}</CardTitle>\r\n                            <CardBody>\r\n                                <div id=\"postContent\">\r\n                                    <form autoComplete=\"off\">\r\n                                        <TextField \r\n                                            id=\"textArea\" \r\n                                            placeholder=\"Add a post...\" \r\n                                            fullWidth margin=\"none\" \r\n                                            multiline rows=\"5\" \r\n                                            onBlur= {e => contentHandler(e.target.value)}\r\n                                        />\r\n                                    </form>\r\n                                </div>\r\n                                \r\n                                <div id=\"postImage\"> \r\n                                    <section className=\"container\">\r\n                                        <div {...getRootProps({className: 'dropzone'})}>\r\n                                            <input {...getInputProps()} />\r\n                                            <Camera  className={classes.post_popup_camera} />\r\n                                        </div>\r\n                                        <aside style={thumbsContainer}>\r\n                                            {imageUpload}\r\n                                        </aside>\r\n                                    </section>\r\n                                </div>\r\n                                <div id=\"buttons\" onClick={cancel}>\r\n                                <Button  className={classes.post_button} type=\"submit\" class=\"btn btn-primary\" onClick={addPostHandler}>POST</Button>\r\n                                <Button  className=\"cancel\" className={classes.post_cancel_button} onClick={cancel}>Cancel</Button>\r\n                                </div>\r\n                            </CardBody>\r\n                        </div>\r\n                    )}\r\n                \r\n                </Popup>\r\n            \r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst thumbsContainer = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n    display: 'inline-flex',\r\n    borderRadius: 2,\r\n    border: '1px solid #eaeaea',\r\n    marginBottom: 8,\r\n    marginRight: 8,\r\n    width: 100,\r\n    height: 100,\r\n    padding: 4,\r\n    boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n    display: 'block',\r\n    width: 'auto',\r\n    height: '100%'\r\n};\r\n\r\nexport default withStyles(styles)(AddPost);\r\n\r\n","import { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport Logo from '../imgs/Guild_Logo.png';\r\nimport profilePic from '../components/header/profilePicPlaceholder.png';\r\nimport Sword from '../imgs/0_GuildSword_Icon.png';\r\nimport Shield from '../imgs/4_Shield_Icon.png';\r\nimport Staff from '../imgs/3_Staff_Icon.png';\r\n\r\nconst styles = theme => ({\r\n    \r\n    mainBar:{\r\n        backgroundColor:\"#b20949\",\r\n        width: '100%',\r\n        height:'70px',\r\n        color: theme.palette.common.white,\r\n    },\r\n    formButtonWrap:{\r\n        width:'30%',\r\n        float:'left',\r\n        display:'inline-box',\r\n        height:'34.4px',\r\n        /*border: '1px solid blue' ,*/\r\n    },\r\n    searchButtonWrap:{\r\n        float:'left',\r\n        height:'34.4px',\r\n        margin:0,\r\n        padding:0,\r\n        marginRight:'5px',\r\n        /*border: '1px solid yellow',*/\r\n        \r\n    },\r\n    addButtonWrap:{\r\n        height:'34.4px',\r\n        margin:0,\r\n        padding:0,\r\n        marginLeft:'2px',\r\n        /* border: '1px solid green',*/\r\n        \r\n    },\r\n    searchButton:{\r\n        height:'34.4px',\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        color: \"white\",\r\n        backgroundColor:\"#69052b\",\r\n        borderBottomLeftRadius:0,\r\n        borderTopLeftRadius:0,\r\n        marginTop:'0',\r\n        /* border: '1px solid black' ,*/\r\n    },\r\n    addButton:{\r\n        height:'34.4px',\r\n        color: \"white\",\r\n        backgroundColor:\"#69052b\",\r\n        marginTop:'0',\r\n        /* border: '1px solid blue' ,*/\r\n    },\r\n    searchForm:{\r\n        width:'50%',\r\n        maxWidth:'500px',\r\n        /*border: '1px solid black' ,*/\r\n    },\r\n    inputWrap:{\r\n        width:'70%',\r\n        float:'left',\r\n        /* border: '1px solid yellow' ,*/\r\n\r\n    },\r\n    searchInput:{\r\n        height:'34.4px',\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    logoButton:{\r\n        width:'80px',\r\n        height:'80px',\r\n        marginTop:\"0px\",\r\n        padding:0,\r\n    },\r\n    logo: {\r\n        cursor:\"pointer\",\r\n        backgroundImage: `url(${Logo})`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n        backgroundPosition: \"center\",\r\n        height:\"80px\",\r\n        width: \"80px\",\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: 0,\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing.unit * 3,\r\n        width: '100%',\r\n        },\r\n        borderBottomRightRadius:0,\r\n        borderTopRightRadius:0,\r\n        /* border: '1px solid white' ,*/\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing.unit * 9,\r\n        marginLeft: theme.spacing.unit * .5,\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        width: '100%',\r\n    },\r\n    inputInput: {\r\n        paddingTop: theme.spacing.unit,\r\n        paddingRight: theme.spacing.unit,\r\n        paddingBottom: theme.spacing.unit,\r\n        paddingLeft: theme.spacing.unit,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n        },\r\n        /* border: '1px solid orange' ,*/\r\n    },\r\n    profileButton:{\r\n        width:'40px',\r\n        height:'40px',\r\n        padding:0,\r\n        margin:\"10px\"\r\n    },\r\n    profileAvatar: {\r\n        backgroundImage: `url(${Sword})`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n        backgroundPosition: \"center\",\r\n        height:\"40px\",\r\n        width: \"40px\",\r\n        borderRadius:'80px',\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n        },\r\n    },\r\n    desktopMenu: {\r\n        position:'fixed',\r\n        marginTop:'55px',\r\n        marginLeft:'30px',\r\n    },\r\n    mobileMenu: {\r\n        position:'fixed',\r\n        marginTop:'55px',\r\n        marginLeft:'20px',\r\n    },\r\n    notificationsModal:{\r\n        marginTop:'55px',\r\n    },\r\n    popMenuIcons:{\r\n        marginRight:'10px',\r\n    },\r\n    notificationsModalText:{\r\n        margin:'10px',\r\n        textAllign:'center',\r\n    },\r\n});\r\n\r\nexport default styles","import React from 'react';\r\nimport {addFriend} from '../../utils/apiCalls';\r\nimport styles from '../../styles/header_style';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nclass SearchFriendForm extends React.Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n      username: '',\r\n    };\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n    const data = new FormData(form);\r\n    \r\n    console.log(event.target.elements.search.value)\r\n  }\r\n  \r\n  searchFriend = async() =>{\r\n    console.log(\"Searching\");\r\n  }\r\n\r\n  addFriendHandler = async() =>{\r\n    console.log(\"Adding\", this.state.username);\r\n\r\n    let data = await addFriend(localStorage.getItem('token'), this.state.username);\r\n    console.log(\"addFriend response:\" , data);\r\n    if(data.error === \"\"){\r\n        console.log(\"addFriend was successful\");\r\n        alert(\"Friend request successfully sent to \"+ this.state.username);\r\n    }\r\n    else{\r\n        alert(data.error);\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n        <form autoComplete=\"off\" className={classes.searchForm} onSubmit={this.handleSubmit}>\r\n        <div className={classes.inputWrap}>\r\n            <InputBase  className={classes.searchInput}\r\n                name=\"search\"\r\n                placeholder=\"Search or Add a friend...\"\r\n                classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n                }}\r\n                value={this.state.username} \r\n                onChange= { e => this.setState({...this.state, username: e.target.value})}\r\n            />\r\n        </div>\r\n        <div className={classes.formButtonWrap}>\r\n          <div className={classes.searchButtonWrap}>\r\n              <Button type=\"submit\" onClick={this.searchFriend} className={classes.searchButton} >\r\n              <SearchIcon />\r\n              </Button>\r\n          </div>\r\n          <div className={classes.addButtonWrap}>\r\n              <Button type=\"submit\" onClick={this.addFriendHandler} className={classes.addButton}>\r\n                <AddIcon />\r\n              </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SearchFriendForm);","\r\n/* Dependencies Import */\r\nimport React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport headerstyles from \"../../styles/header_style\"\r\n\r\n\r\n\r\nclass ProfileAvatar extends React.Component{\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        if(this.props.profileImageLink != ''){\r\n            let profilePic = './logo.png';\r\n            return(\r\n\r\n                <a className={classes.profileAvatar} ></a>\r\n            ) \r\n        }\r\n        else{\r\n            let profilePic = this.props.profileImageLink;\r\n            return(\r\n                /*<AccountCircle />*/\r\n                <a className={classes.profileAvatar} ></a>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(headerstyles)(ProfileAvatar);","/* Dependencies Import */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Material UI imports */\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LogOutIcon from '@material-ui/icons/Close';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\n/* components and files import*/\r\nimport styles from '../../styles/header_style';\r\nimport SearchFriendForm from \"./header_form\"\r\nimport ProfileAvatar from \"./SmallProfileAvatar\"\r\n\r\nclass Header_component extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  \r\n  state = {\r\n    anchorEl: null,\r\n    mobileMoreAnchorEl: null,\r\n    notificationsModalAnchorEl:null,\r\n  };\r\n\r\n\r\n  handleProfileMenuOpen = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleMenuClose = () => {\r\n    this.setState({ anchorEl: null });\r\n    this.handleMobileMenuClose();\r\n  };\r\n\r\n  handleMobileMenuOpen = event => {\r\n    this.setState({ mobileMoreAnchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleMobileMenuClose = () => {\r\n    this.setState({ mobileMoreAnchorEl: null });\r\n  };\r\n\r\n  handleNotificationsModalOpen = event => {\r\n    this.setState({ notificationsModalAnchorEl: event.currentTarget });\r\n  }\r\n\r\n  handleNotifcationsModalClose = () => {\r\n    this.setState({ notificationsModalAnchorEl: null });\r\n  };\r\n\r\n  handleLogout = async() =>{\r\n    localStorage.clear();\r\n    this.props.props.history.push(\"/\");\r\n  }\r\n\r\n  goProfile = async() =>{\r\n    localStorage.setItem('usernameFriend', '');\r\n    this.props.props.history.push(\"/profile\");\r\n  }\r\n\r\n  goHome = async() =>{\r\n    this.props.props.history.push(\"/home\");\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.data)\r\n    const { anchorEl, mobileMoreAnchorEl } = this.state;\r\n    const {  notificationsModalAnchorEl} = this.state;\r\n    const { classes } = this.props;\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n    const isNotificationsModalOpen = Boolean(notificationsModalAnchorEl);\r\n\r\n    let notifications_amount = this.props.data.length\r\n\r\n    let notifications_markup = this.props.data.map((notification, index) => {\r\n\r\n      return(\r\n        <MenuItem onClick={this.handleNotifcationsModalClose}>             \r\n          <ProfileAvatar/>\r\n          <p className={classes.notificationsModalText}> {notification.user}  {notification.message}</p>\r\n        </MenuItem>\r\n\r\n      )\r\n    })\r\n\r\n    const renderNotificationsModal = (\r\n    \r\n      <Menu \r\n        className={classes.notificationsModal}\r\n        anchorEl={notificationsModalAnchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={isNotificationsModalOpen}\r\n        onClose={this.handleNotifcationsModalClose}\r\n      >\r\n        {notifications_markup}\r\n      </Menu>\r\n    );\r\n    \r\n\r\n    const renderMenu = (\r\n      <Menu\r\n        className={classes.desktopMenu}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={isMenuOpen}\r\n        onClose={this.handleMenuClose}\r\n      >\r\n        <MenuItem onClick={() =>{this.handleMenuClose(); this.goProfile();}}>\r\n            <AccountCircle className={classes.popMenuIcons} />\r\n          <p>Profile</p>\r\n        </MenuItem>\r\n        <MenuItem onClick={this.handleMenuClose}>\r\n              <SettingsIcon className={classes.popMenuIcons}/>\r\n          <p>Settings</p>\r\n        </MenuItem>\r\n        <MenuItem onClick={() =>{this.handleMenuClose(); this.handleLogout();}}>\r\n                <LogOutIcon className={classes.popMenuIcons}/>\r\n          <p>Logout</p>\r\n        </MenuItem>\r\n      </Menu>\r\n    );\r\n\r\n    const renderMobileMenu = (\r\n      <Menu \r\n        className={classes.mobileMenu}\r\n        anchorEl={mobileMoreAnchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={isMobileMenuOpen}\r\n        onClose={this.handleMenuClose}\r\n      >\r\n        <MenuItem onClick={()=>{ this.handleMobileMenuClose(); }}>\r\n          <Badge className={classes.popMenuIcons} badgeContent={notifications_amount} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n          <p>Notifications</p>\r\n        </MenuItem>\r\n        <MenuItem onClick={() =>{this.handleMenuClose(); this.goProfile();}}>\r\n            <AccountCircle className={classes.popMenuIcons} />\r\n          <p>Profile</p>\r\n        </MenuItem>\r\n        <MenuItem onClick={this.handleMenuClose}>\r\n              <SettingsIcon className={classes.popMenuIcons}/>\r\n          <p>Settings</p>\r\n        </MenuItem>\r\n        <MenuItem onClick={() =>{this.handleMenuClose(); this.handleLogout();}}>\r\n                <LogOutIcon className={classes.popMenuIcons}/>\r\n          <p>Logout</p>\r\n        </MenuItem>\r\n      </Menu>\r\n    );\r\n    let profileImageLink = '../../imgs/0_GuildSword_Icon.png';\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.mainBar} position=\"static\">\r\n          <Toolbar>\r\n              <a className={classes.logo} onClick={this.goHome}>{this.props.props.children}</a>\r\n              <SearchFriendForm/>\r\n            <div className={classes.grow} />\r\n            <div className={classes.sectionDesktop}>\r\n              <IconButton color=\"inherit\" onClick={this.handleNotificationsModalOpen}>\r\n                <Badge badgeContent={notifications_amount} color=\"secondary\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton className={classes.profileButton}\r\n                aria-owns={isMenuOpen ? 'material-appbar' : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n              <ProfileAvatar profileImageLink={profileImageLink}/>\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.sectionMobile}>\r\n              <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\r\n                <MoreIcon />\r\n              </IconButton>\r\n            </div>\r\n          </Toolbar>\r\n        </div>\r\n        {renderMenu}\r\n        {renderMobileMenu}\r\n        {renderNotificationsModal}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader_component.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nHeader_component.defaultProps = {\r\n  data:[\r\n    {\"user\": \"justiscezager1234\", \"message\":\"Liked your post\"},\r\n    {\"user\": \"justiscezager1234\",\"message\":\"Commented on your post\"},\r\n    {\"user\": \"justiscezager1234\", \"message\":\"Send you a friend request\"},\r\n    {\"user\": \"justiscezager1234\", \"message\":\"Accepted your friend request\"},\r\n  ],\r\n}\r\n\r\n/*\r\nHeader_component.defaultProps = {\r\n  data: \r\n}\r\n*/\r\n\r\nexport default withStyles(styles)(Header_component);","import React, { useContext, useState, useEffect  } from 'react';\r\nimport {grabAllFriends, grabAllPosts, addPost} from '../utils/apiCalls';\r\nimport Friend from '../components/Friend';\r\nimport Post from '../components/Post';\r\nimport AddPost from '../components/AddPost';\r\nimport Header_component from '../components/header/Header_component';\r\nimport styles from '../styles/home_styles.css';\r\n\r\nexport default props => {\r\n    console.log('props: ', props); \r\n    const token = localStorage.getItem('token');\r\n    const [content,setContent] = useState('');\r\n    const [friends,setFriends] = useState([]);\r\n    const [posts,setPosts] = useState([]);\r\n    \r\n    const friendsHandler = async() => {\r\n        let result =  await grabAllFriends(token).then(ble => ble) \r\n        console.log('fetching friends', result);\r\n        setFriends(result);\r\n    }\r\n    \r\n    const postsHandler = async() => {\r\n        let result =  await grabAllPosts(token, localStorage.getItem('usernameFriend')).then(ble => ble) \r\n        console.log('fetching posts', result);\r\n        setPosts(result);\r\n    }\r\n\r\n    useEffect(()=>{//This will run once and then only if token changes\r\n        if(token === null){ //If token is lost \r\n            //Or user accessed paged without login in\r\n            //Or if Boogie-Man went back from browser history and tried to login as the previous user\r\n            alert(\"Please Login to verify your identity\\nYou will now be redirected to the Login page.\");\r\n            logout();\r\n        }\r\n    }, [token]); //If this variable changes, this code will be run again\r\n\r\n    useEffect(()=>{//This will be executed always after the components have been rendered\r\n        console.log(\"Username: \", localStorage.getItem('usernameFriend'));\r\n        friendsHandler();\r\n        postsHandler();\r\n    },[]);//Array that contains all variables that if changed then that function should run again. [] = componentDidMount\r\n    \r\n    useEffect(()=>{ \r\n        //No logic\r\n        return()=>{\r\n            console.log(\"Component did unMount\");\r\n        }\r\n    }, [] );\r\n    \r\n    const LoadingIndicator = isLoading =>{\r\n        if (isLoading) {\r\n            return (\r\n            <div>\r\n                <p>Loading...</p>\r\n            </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    \r\n    const logout = async() =>{\r\n        localStorage.clear();\r\n        props.history.push(\"/\");\r\n    }\r\n\r\n    const contentHandler = content=>{\r\n        setContent(content);\r\n        console.log(\"Content:\", content);\r\n    }\r\n\r\n    return (\r\n        <div className=\"AppHome\">\r\n            <Header_component props={props}/>\r\n            {/* <Home />  */}\r\n            <div className =\"home_collum1\">\r\n                { \r\n                    friends.map((values) => {\r\n                        return (\r\n                            <Friend id={values.username}\r\n                                    name={values.display_name} \r\n                                    username={values.username}\r\n                                    preview={values.preview} \r\n                                    history={props.history}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n            <div className =\"home_collum2\">\r\n                <AddPost id=\"add_post\"/>\r\n                {\r\n                    posts.map((value) => {\r\n                        return (\r\n                            <Post   key={value.post_id} \r\n                                    id={value.post_id} \r\n                                    image_url={value.image_url}\r\n                                    time_created={value.time_created}\r\n                                    num_likes={value.num_likes}\r\n                                    num_comments={value.num_comments}\r\n                                    username={localStorage.getItem('usernameFriend')}  \r\n                                    content={value.content}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect  } from 'react';\r\nimport {grabAllPosts} from '../utils/apiCalls';\r\nimport Post from '../components/Post';\r\nimport AddPost from '../components/AddPost';\r\nimport HomeButton from '../components/buttons/homeButton';\r\nimport Header_component from '../components/header/Header_component';\r\n\r\nexport default props => {\r\n    const token = localStorage.getItem('token');\r\n    const [posts,setPosts] = useState([]);\r\n\r\n    const postsHandler = async() => {\r\n        let result =  await grabAllPosts(token, localStorage.getItem('usernameFriend')).then(ble => ble) \r\n        console.log('fetching posts', result);\r\n        setPosts(result);\r\n    }\r\n\r\n    useEffect(()=>{//This will run once and then only if token changes\r\n        if(token === null){ //If token is lost \r\n            alert(\"Please Login to verify your identity\\nYou will now be redirected to the Login page.\");\r\n            logout();\r\n        }\r\n        \r\n        postsHandler();\r\n    }, [token]);\r\n\r\n    const logout = async() =>{\r\n        localStorage.clear();\r\n        props.history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n    <div className=\"App\">\r\n        <Header_component props={props}/>\r\n        <h1 className=\"m-3 text-center\">{localStorage.getItem('usernameFriend')===''? localStorage.getItem('username') : localStorage.getItem('usernameFriend')}'s Profile</h1>\r\n        <AddPost id=\"add_post\"/>\r\n        {\r\n                posts.map((value) => {\r\n                    return (\r\n                        <Post   key={value.post_id} \r\n                                id={value.post_id} \r\n                                image_url={value.image_url}\r\n                                time_created={value.time_created}\r\n                                num_likes={value.num_likes}\r\n                                num_comments={value.num_comments}\r\n                                username={localStorage.getItem('usernameFriend')}  \r\n                                content={value.content}/>\r\n                    );\r\n                })\r\n            }\r\n        <HomeButton path='/home' {...props}>Home</HomeButton>\r\n    </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Router from './pages/router'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<Router />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport App from '../App';\r\nimport SignUP from \"./signUp\";\r\nimport Home from \"./home\";\r\nimport Profile from \"./profile\";\r\n\r\nexport default() => {\r\n    return(\r\n        <Router>\r\n            <Route exact path=\"/\" component={App} />\r\n            <Route path=\"/signUp\" component={SignUP} />\r\n            <Route path=\"/home\" component={Home} />\r\n            <Route path=\"/profile\" component={Profile} />\r\n        </Router>\r\n    );\r\n}","module.exports = __webpack_public_path__ + \"static/media/4_Shield_Icon.d12d4b5a.png\";","module.exports = __webpack_public_path__ + \"static/media/1_Sword_Icon.b2724692.png\";","module.exports = __webpack_public_path__ + \"static/media/2_BowArrow_Icon.e41b5764.png\";","module.exports = __webpack_public_path__ + \"static/media/Guild_Logo.c9ac72bc.png\";"],"sourceRoot":""}